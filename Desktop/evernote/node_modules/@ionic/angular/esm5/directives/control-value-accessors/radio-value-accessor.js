import * as tslib_1 from "tslib";
import { Directive, ElementRef, HostListener } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ValueAccessor } from './value-accessor';
import * as ɵngcc0 from '@angular/core';
var RadioValueAccessor = /** @class */ (function (_super) {
    tslib_1.__extends(RadioValueAccessor, _super);
    function RadioValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    RadioValueAccessor_1 = RadioValueAccessor;
    RadioValueAccessor.prototype._handleIonSelect = function (el) {
        this.handleChangeEvent(el, el.checked);
    };
    var RadioValueAccessor_1;
    RadioValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    tslib_1.__decorate([
        HostListener('ionSelect', ['$event.target'])
    ], RadioValueAccessor.prototype, "_handleIonSelect", null);
RadioValueAccessor.ɵfac = function RadioValueAccessor_Factory(t) { return new (t || RadioValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
RadioValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioValueAccessor, selectors: [["ion-radio"]], hostBindings: function RadioValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("ionSelect", function RadioValueAccessor_ionSelect_HostBindingHandler($event) { return ctx._handleIonSelect($event.target); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: RadioValueAccessor_1,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'ion-radio',
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: RadioValueAccessor_1,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _handleIonSelect: [{
            type: HostListener,
            args: ['ionSelect', ['$event.target']]
        }] }); })();
    return RadioValueAccessor;
}(ValueAccessor));
export { RadioValueAccessor };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tdmFsdWUtYWNjZXNzb3IuanMiLCJzb3VyY2VzIjpbIm5nOi9AaW9uaWMvYW5ndWxhci9kaXJlY3RpdmVzL2NvbnRyb2wtdmFsdWUtYWNjZXNzb3JzL3JhZGlvLXZhbHVlLWFjY2Vzc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQWFqRDtBQUVHLElBRnFDLDhDQUFhO0FBQUMsSUFFcEQsNEJBQVksRUFBYztBQUM1QixlQUFJLGtCQUFNLEVBQUUsQ0FBQztBQUdWLElBRkQsQ0FBQztBQUNILDJCQUxhLGtCQUFrQjtBQUFFLElBTy9CLDZDQUFnQixHQUFoQixVQUFpQixFQUFPO0FBQzFCLFFBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDM0MsSUFBRSxDQUFDO0FBQ0Y7QUFDNEI7QUFBK0QsZ0JBVDFFLFVBQVU7QUFBRztBQUN0QixJQUlQO0FBQXFCLFFBRHBCLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUMvQyw4REFFRztJQVRVLGtCQUFrQix1REFYOUIsU0FBUyxDQUFDLGNBQ1QsaURBQWlEO1VBQ2pELFFBQVEsRUFBRSxXQUFXLGNBQ3JCLFNBQVMsRUFBRSxrQkFDVCxzQkFDRSxPQUFPLEVBQUUsaUJBQWlCLHNCQUMxQixXQUFXLEVBQUUsb0JBQWtCO1lBQy9CLEtBQUssRUFBRSxJQUFJLGtCQUNaLGNBQ0YsVUFDRixDQUFDLFFBQ1csa0JBQWtCLENBVTlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELHlCQUFDO0FBQ0EsQ0FEQSxBQVZELENBQXdDLGFBQWEsR0FVcEQ7QUFDRCxTQVhhLGtCQUFrQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi92YWx1ZS1hY2Nlc3Nvcic7XG5cbkBEaXJlY3RpdmUoe1xuICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yICovXG4gIHNlbGVjdG9yOiAnaW9uLXJhZGlvJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogUmFkaW9WYWx1ZUFjY2Vzc29yLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUmFkaW9WYWx1ZUFjY2Vzc29yIGV4dGVuZHMgVmFsdWVBY2Nlc3NvciB7XG5cbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpIHtcbiAgICBzdXBlcihlbCk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdpb25TZWxlY3QnLCBbJyRldmVudC50YXJnZXQnXSlcbiAgX2hhbmRsZUlvblNlbGVjdChlbDogYW55KSB7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VFdmVudChlbCwgZWwuY2hlY2tlZCk7XG4gIH1cbn1cbiJdfQ==